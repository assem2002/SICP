
(define (make-account user-password balance)
	(define wrong-entries 0)
	(define (reset) (set! wrong-entries 0))
  	(define (increment) (set! wrong-entries (+ wrong-entries 1)))
(define (withdraw amount)
	(if (>= balance amount)
		(begin (set! balance (- balance amount))
		balance)
		"Insufficient funds"))
(define (deposit amount)
	(set! balance (+ balance amount))
	balance)
(define (dispatch entered-password m)
  (cond ((eq? entered-password user-password) 
		(reset)
         (cond
          	((eq? m 'check-password) true)
        	((eq? m 'withdraw) withdraw)
			((eq? m 'deposit) deposit)
			(else (error "Unknown request: MAKE-ACCOUNT"))))
      ((>= wrong-entries 2) (error "call-the-cops!"))
        (else (increment) (error "Wrong Password!!") )))
	dispatch)

(define (make-joint account account-pass currentPassword)
  (cond ((account account-pass 'check-password)
         (lambda (password m)
           (cond ((eq? password currentPassword) (account account-pass m))
                 (else (error "wrong passowrd")))))
        (else (error "wrong password to merge with"))))

(define peter-acc (make-account 'pass 100))
(define paul-acc (make-joint peter-acc 'pass 'ww))
((paul-acc 'ww 'deposit) 10)
((peter-acc 'pass 'deposit) 10)

