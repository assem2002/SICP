(define (ramanujan)
	(define (cube x) (* x x x ))
	(define weight (lambda (x ) (+ (cube (car x))(cube (cadr x))) ) )
	(define seq (pair-weighted integers integers weight))
	(define (filter s)
		(cond ((= (weight  (stream-car s) )
					(weight (stream-cdr s))) (cons-stream (weight  (stream-car s)) 
																			(filter (stream-cdr s) ) ))
		(else (filter (stream-cdr s)))))
	filter seq)
